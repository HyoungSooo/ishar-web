# Generated by Django 4.2.4 on 2023-08-29 21:53

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('isharweb', '0002_accountupgrade_challenge_class_force_news_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Season',
            fields=[
                ('season_id', models.AutoField(help_text='Auto-generated permanent season (identification) number.', primary_key=True, serialize=False, verbose_name='Season ID')),
                ('is_active', models.IntegerField(choices=[(0, False), (1, True)], help_text='Is the season active?', verbose_name='Is Active?')),
                ('effective_date', models.DateTimeField(help_text='Effective start date of the season.', verbose_name='Effective Date')),
                ('expiration_date', models.DateTimeField(help_text='Expiration end date of the season.', verbose_name='Expiration Date')),
                ('last_challenge_cycle', models.DateTimeField(help_text='Last date and time of challenges cycled in the season.', verbose_name='Last Challenge Cycle')),
                ('average_essence_gain', models.FloatField(help_text='Average essence gain in the season.', verbose_name='Average Essence Gain')),
                ('average_remorts', models.FloatField(help_text='Average remorts in the season.', verbose_name='Average Remorts')),
                ('max_essence_gain', models.IntegerField(help_text='Max essence gain in the season.', verbose_name='Max Essence Gain')),
                ('max_remorts', models.IntegerField(help_text='Max number of remorts in the season.', verbose_name='Max Remorts')),
                ('season_leader_account', models.IntegerField(blank=True, help_text='Leader account in the season.', null=True, verbose_name='Season Leader Account')),
                ('seasonal_leader_name', models.TextField(blank=True, help_text='Leader name in the season.', null=True, verbose_name='Seasonal Leader Name')),
                ('max_renown', models.IntegerField(help_text='Max amount of renown gained in the season.', verbose_name='Max Renown')),
                ('avg_renown', models.FloatField(help_text='Average amount of renown gained in the season.', verbose_name='Average Renown')),
            ],
            options={
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
                'db_table': 'seasons',
                'ordering': ('-is_active', '-season_id'),
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='accountupgrade',
            options={'managed': False, 'ordering': ['is_disabled', 'name'], 'verbose_name': 'Account Upgrade', 'verbose_name_plural': 'Account Upgrades'},
        ),
        migrations.AlterModelOptions(
            name='class',
            options={'managed': False, 'ordering': ('class_name',), 'verbose_name': 'Class', 'verbose_name_plural': 'Classes'},
        ),
        migrations.AlterModelOptions(
            name='force',
            options={'managed': False, 'ordering': ('force_name',), 'verbose_name': 'Force', 'verbose_name_plural': 'Forces'},
        ),
        migrations.AlterModelOptions(
            name='player',
            options={'managed': False, 'ordering': ['-true_level', 'id'], 'verbose_name': 'Player', 'verbose_name_plural': 'Players'},
        ),
        migrations.AlterModelOptions(
            name='quest',
            options={'managed': False, 'ordering': ['-repeatable', 'display_name', 'quest_id'], 'verbose_name': 'Quest', 'verbose_name_plural': 'Quests'},
        ),
        migrations.AlterModelOptions(
            name='race',
            options={'managed': False, 'ordering': ['-is_playable', 'display_name', 'symbol', 'race_id'], 'verbose_name': 'Race', 'verbose_name_plural': 'Races'},
        ),
        migrations.AlterModelOptions(
            name='racialaffinity',
            options={'managed': False, 'ordering': ('affinity_type',), 'verbose_name': 'Racial Affinity', 'verbose_name_plural': 'Racial Affinities'},
        ),
        migrations.AlterModelOptions(
            name='spellflag',
            options={'managed': False, 'ordering': ['name', 'description', '-id'], 'verbose_name': 'Spell Flag'},
        ),
        migrations.AlterModelOptions(
            name='spellforce',
            options={'managed': False, 'ordering': ['spell', 'force'], 'verbose_name': 'Spell Force', 'verbose_name_plural': 'Spell Forces'},
        ),
        migrations.AlterModelOptions(
            name='spellinfo',
            options={'managed': False, 'ordering': ('-is_spell', '-is_skill', '-is_type', 'skill_name', 'enum_symbol'), 'verbose_name': 'Spell', 'verbose_name_plural': 'Spells'},
        ),
        migrations.AlterModelOptions(
            name='spellspellflag',
            options={'managed': False, 'ordering': ('spell', 'flag'), 'verbose_name': "Spell's Flag", 'verbose_name_plural': "Spell's Flags"},
        ),
    ]
