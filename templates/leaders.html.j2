{%- set page = 'leaders' -%}
{% extends "layout.html.j2" %}
{% block meta_title %}Leaders{% endblock meta_title %}
{% block meta_description %}Leader board of top players of the game and their achievements{% endblock %}
{% block meta_url %}{{ url_for('leaders', _external=True) }}{% endblock meta_url %}">
{% block title %}Leaders{% endblock %}
{% block header %}Leaders{% endblock %}
{%- macro display_deaths(player) -%}
    {%- if player.player_type != 'Classic' -%}
        gridjs.html(`<span class="{{ player.player_css }}">{{ player.player_type }}</span>`)
    {%- else -%}
        {{ player.deaths }}
    {%- endif -%}
{%- endmacro -%}
{%- block scripts %}
        <script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>
        <script>
            function showLeaders(where) {
                new gridjs.Grid({
                    columns: [
                        {
                            id:         'name',
                            name:       'Player',
                            formatter:  (cell) => gridjs.html(`<a href="/player/${cell}#player">${cell}</a>`)
                        },
                        {
                            id:     'remorts',
                            name:   'Remorts'
                        },
                        {
                            id:     'renown',
                            name:   'Renown'
                        },
                        {
                            id:     'quests',
                            name:   'Quests'
                        },
                        {
                            id:     'challenges',
                            name:   'Challenges'
                        },
                        {
                            id:     'deaths',
                            name:   'Deaths',
                            sort:   {
                                        compare: (a, b) => {
                                            if ( (b > a) || (isNaN(a)) ) {
                                                return -1;
                                            } else if ( (a > b) || (isNaN(b)) ) {
                                                return 1;
                                            } else {
                                                return 0;
                                            };
                                        }
                                    }
                        }
                    ],
                    data: [
                      {%- for leader in leader_players %}
                        {
                            name:         "{{ leader.name }}",
                            remorts:      {{ leader.remorts }},
                            renown:       {{ leader.total_renown }},
                            quests:       {{ leader.quests_completed }},
                            challenges:   {{ leader.challenges_completed }},
                            deaths:       {{ display_deaths(leader) }}
                        }{% if not loop.last %},{% endif %}
                      {%- endfor %}
                    ],
                    search: true,
                    sort: true,
                    pagination: true,
                }).render(where);
            };
        </script>
{%- endblock scripts %}
{%- block content %}
                <div id="leaders"></div>
                <script>
                    showLeaders(document.getElementById('leaders'));
                </script>
{%- endblock content %}
